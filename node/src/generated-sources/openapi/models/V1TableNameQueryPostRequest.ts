/* tslint:disable */
/* eslint-disable */
/**
 * LanceDB Vector API
 * LanceDB Cloud API is a RESTful API that allows users to access and modify data stored in LanceDB Cloud. Table actions are considered temporary resource creations and all use POST method. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact@lancedb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface V1TableNameQueryPostRequest
 */
export interface V1TableNameQueryPostRequest {
    /**
     * The query search term
     * @type {Array<number>}
     * @memberof V1TableNameQueryPostRequest
     */
    vector?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof V1TableNameQueryPostRequest
     */
    k?: number;
    /**
     * 
     * @type {number}
     * @memberof V1TableNameQueryPostRequest
     */
    nprobes?: number;
    /**
     * 
     * @type {number}
     * @memberof V1TableNameQueryPostRequest
     */
    refineFactor?: number;
    /**
     * 
     * @type {string}
     * @memberof V1TableNameQueryPostRequest
     */
    columns?: string;
    /**
     * 
     * @type {string}
     * @memberof V1TableNameQueryPostRequest
     */
    filter?: string;
}

/**
 * Check if a given object implements the V1TableNameQueryPostRequest interface.
 */
export function instanceOfV1TableNameQueryPostRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1TableNameQueryPostRequestFromJSON(json: any): V1TableNameQueryPostRequest {
    return V1TableNameQueryPostRequestFromJSONTyped(json, false);
}

export function V1TableNameQueryPostRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1TableNameQueryPostRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'vector': !exists(json, 'vector') ? undefined : json['vector'],
        'k': !exists(json, 'k') ? undefined : json['k'],
        'nprobes': !exists(json, 'nprobes') ? undefined : json['nprobes'],
        'refineFactor': !exists(json, 'refineFactor') ? undefined : json['refineFactor'],
        'columns': !exists(json, 'columns') ? undefined : json['columns'],
        'filter': !exists(json, 'filter') ? undefined : json['filter'],
    };
}

export function V1TableNameQueryPostRequestToJSON(value?: V1TableNameQueryPostRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'vector': value.vector,
        'k': value.k,
        'nprobes': value.nprobes,
        'refineFactor': value.refineFactor,
        'columns': value.columns,
        'filter': value.filter,
    };
}

